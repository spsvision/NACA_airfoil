# encoding: utf-8
# Release 16.1
SetScriptVersion(Version="16.1.91")
system1 = GetSystem(Name="FFF 2")
meshComponent1 = system1.GetComponent(Name="Mesh")
meshComponent1.Refresh()
mesh1 = system1.GetContainer(ComponentName="Mesh")
mesh1.Edit()
system2 = GetSystem(Name="FFF 1")
mesh2 = system2.GetContainer(ComponentName="Mesh")
mesh2.Edit()
Save(Overwrite=True)
system3 = GetSystem(Name="FFF")
geometry1 = system3.GetContainer(ComponentName="Geometry")
geometry1.Edit()
geometry1.Exit()
mesh2.Exit()
mesh3 = system3.GetContainer(ComponentName="Mesh")
mesh3.Edit()
mesh3.Exit()
system3.DisplayText = "200 div, 1e-2 Inf"
mesh2.Edit()
mesh1.Exit()
system1.DisplayText = "4e-3 Inf"
meshComponent1.Update(AllDependencies=True)
mesh2.Exit()
system2.DisplayText = "1e-3 Inf"
mesh1.Edit()
mesh1.Exit()
meshComponent1.Update(AllDependencies=True)
system1.DisplayText = "2e-3 ES, 4e-3 Inf"
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Refresh()
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessors=32))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "General*Frame1*Table1*Frame2(Solver)*Table2(Solver)*ButtonBox1(Type)*Density-Based" #f)(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame2(Solver)*Table2(Solver)*ButtonBox1(Type)*Density-Based")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 2))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*k-epsilon (2 eqn)" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*k-epsilon (2 eqn)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-position \"Viscous Model\" '(x 333 y 374))")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame6(k-epsilon Model)*ToggleBox6(k-epsilon Model)*Realizable" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame6(k-epsilon Model)*ToggleBox6(k-epsilon Model)*Realizable")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Materials*Frame1*Table1*Frame1*List1(Materials)\" '( 1))(cx-gui-do cx-activate-item \"Materials*Frame1*Table1*Frame1*List1(Materials)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Materials*Frame1*Table1*Frame1*List1(Materials)\" '( 1))(cx-gui-do cx-activate-item \"Materials*Frame1*Table1*Frame1*List1(Materials)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Materials*Frame1*Table1*ButtonBox2*PushButton1(Create/Edit)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*Frame2(Properties)*Table2(Properties)*Frame4*Frame2*RealEntry3\" '( 1.176674))(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*Frame2(Properties)*Table2(Properties)*Frame7*Frame2*RealEntry3\" '( 1.009e-005))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|surface_body (fluid)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|surface_body (fluid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "fluid-2-1*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|surface_body (fluid)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|surface_body (fluid)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 3))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 0))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*ButtonBox1*PushButton1(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "wall-5-1*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame2*Table2*DropDownList2(Type)\" '( 12))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame2*Table2*DropDownList2(Type)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"velocity-inlet-5-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList6(Velocity Specification Method)\" '( 1))(cx-gui-do cx-activate-item \"velocity-inlet-5-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList6(Velocity Specification Method)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"velocity-inlet-5-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame15*Table15*RealEntry2(X-Velocity)\" '( 50.668))(cx-gui-do cx-set-real-entry-list \"velocity-inlet-5-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame16*Table16*RealEntry2(Y-Velocity)\" '( 8.934))(cx-gui-do cx-activate-item \"velocity-inlet-5-1*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 1))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*ButtonBox1*PushButton1(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "wall-6-1*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame2*Table2*DropDownList2(Type)\" '( 10))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame2*Table2*DropDownList2(Type)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "pressure-outlet-6-1*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*Frame2*Table2*PushButton2(Operating Conditions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Operating Conditions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 3))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 4))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Values"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))(cx-gui-do cx-activate-item \"Reference Values*DropDownList1(Compute from)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)\" '( 1))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList4(Turbulent Dissipation Rate)\" '( 1))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList4(Turbulent Dissipation Rate)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Solution Methods*Frame1*Table1*Frame6*Table6*CheckButton1(High Order Term Relaxation)" #f)(cx-gui-do cx-activate-item "Solution Methods*Frame1*Table1*Frame6*Table6*CheckButton1(High Order Term Relaxation)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Monitors*Frame1*Table1*Frame1*List1(Residuals, Statistic and Force Monitors)\" '( 0))(cx-gui-do cx-activate-item \"Monitors*Frame1*Table1*Frame1*List1(Residuals, Statistic and Force Monitors)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Frame1*Table1*Frame2*Table2*PushButton2(Edit)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Frame1*Table1*Frame2*Table2*Frame1(Equations)*Table1(Equations)*RealEntry11\" '( 1e-006))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Frame1*Table1*Frame2*Table2*Frame1(Equations)*Table1(Equations)*RealEntry17\" '( 1e-006))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Frame1*Table1*Frame2*Table2*Frame1(Equations)*Table1(Equations)*RealEntry23\" '( 1e-006))")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Frame1*Table1*Frame2*Table2*Frame1(Equations)*Table1(Equations)*RealEntry29\" '( 1e-006))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Frame1*Table1*Frame2*Table2*Frame1(Equations)*Table1(Equations)*RealEntry35\" '( 1e-006))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Frame1*Table1*Frame2*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreateMonitor*Drag...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame1(Options)*Table1(Options)*CheckButton1(Print to Console)" #f)(cx-gui-do cx-activate-item "Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame1(Options)*Table1(Options)*CheckButton1(Print to Console)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame1(Options)*Table1(Options)*CheckButton2(Plot)" #f)(cx-gui-do cx-activate-item "Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame1(Options)*Table1(Options)*CheckButton2(Plot)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Force Moment Monitor*Frame1*Table1*Frame2*Table2*Frame1*List1(Wall Zones)\" '( 0))(cx-gui-do cx-activate-item \"Force Moment Monitor*Frame1*Table1*Frame2*Table2*Frame1*List1(Wall Zones)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Force Moment Monitor*Frame1*Table1*Frame2*Table2*Frame1*List1(Wall Zones)\" '( 0 1))(cx-gui-do cx-activate-item \"Force Moment Monitor*Frame1*Table1*Frame2*Table2*Frame1*List1(Wall Zones)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame2(Force Vector)*Table2(Force Vector)*RealEntry1(X)\" '( 0.9848))(cx-gui-do cx-set-real-entry-list \"Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame2(Force Vector)*Table2(Force Vector)*RealEntry2(Y)\" '( 0.1736))(cx-gui-do cx-activate-item \"Force Moment Monitor*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Frame1*Table1*Frame2*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreateMonitor*Lift...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame1(Options)*Table1(Options)*CheckButton1(Print to Console)" #f)(cx-gui-do cx-activate-item "Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame1(Options)*Table1(Options)*CheckButton1(Print to Console)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame1(Options)*Table1(Options)*CheckButton2(Plot)" #f)(cx-gui-do cx-activate-item "Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame1(Options)*Table1(Options)*CheckButton2(Plot)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Force Moment Monitor*Frame1*Table1*Frame2*Table2*Frame1*List1(Wall Zones)\" '( 0))(cx-gui-do cx-activate-item \"Force Moment Monitor*Frame1*Table1*Frame2*Table2*Frame1*List1(Wall Zones)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Force Moment Monitor*Frame1*Table1*Frame2*Table2*Frame1*List1(Wall Zones)\" '( 0 1))(cx-gui-do cx-activate-item \"Force Moment Monitor*Frame1*Table1*Frame2*Table2*Frame1*List1(Wall Zones)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame2(Force Vector)*Table2(Force Vector)*RealEntry1(X)\" '( -0.1736))(cx-gui-do cx-set-real-entry-list \"Force Moment Monitor*Frame1*Table1*Frame1*Table1*Frame2(Force Vector)*Table2(Force Vector)*RealEntry2(Y)\" '( 0.9848))(cx-gui-do cx-activate-item \"Force Moment Monitor*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Solution Initialization*Frame1*Table1*Frame3(Initialization Methods)*ToggleBox3(Initialization Methods)*Standard Initialization" #f)(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*Frame3(Initialization Methods)*ToggleBox3(Initialization Methods)*Standard Initialization")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Initialization*Frame1*Table1*DropDownList1(Compute from)\" '( 2))(cx-gui-do cx-activate-item \"Solution Initialization*Frame1*Table1*DropDownList1(Compute from)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox8*PushButton1(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Run Calculation*Frame1*Table1*CheckButton16(Solution Steering)" #f)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*CheckButton16(Solution Steering)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Run Calculation*Frame1*Table1*Frame18*Table18*DropDownList1(Flow Type)\" '( 0))(cx-gui-do cx-activate-item \"Run Calculation*Frame1*Table1*Frame18*Table18*DropDownList1(Flow Type)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*Frame18*Table18*PushButton6(More Settings)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Steering*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Run Calculation*Frame1*Table1*CheckButton16(Solution Steering)" #t)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*CheckButton16(Solution Steering)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Solution Methods*Frame1*Table1*CheckButton5(Pseudo Transient)" #f)(cx-gui-do cx-activate-item "Solution Methods*Frame1*Table1*CheckButton5(Pseudo Transient)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Solution Methods*Frame1*Table1*Frame6*Table6*CheckButton1(High Order Term Relaxation)" #t)(cx-gui-do cx-activate-item "Solution Methods*Frame1*Table1*Frame6*Table6*CheckButton1(High Order Term Relaxation)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-activate-item "ToolBar*View Tools*graphicslayout")(cx-gui-do cx-activate-item "MenuBar*PopupMenuView*graphicsview3h")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList2(Flow)\" '( 0))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList2(Flow)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)\" '( 0))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList4(Turbulent Dissipation Rate)\" '( 0))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList4(Turbulent Dissipation Rate)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Initialization*Frame1*Table1*DropDownList1(Compute from)\" '( 2))(cx-gui-do cx-activate-item \"Solution Initialization*Frame1*Table1*DropDownList1(Compute from)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox8*PushButton1(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Run Calculation*Frame1*Table1*PushButton21(Calculate)\")(cx-gui-do cx-set-list-selections \"GraphicsArea*GraphicsView2*DropDownList1\" '( 0))(cx-gui-do cx-activate-item \"GraphicsArea*GraphicsView2*DropDownList1\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Solution Methods*Frame1*Table1*CheckButton5(Pseudo Transient)" #t)(cx-gui-do cx-activate-item "Solution Methods*Frame1*Table1*CheckButton5(Pseudo Transient)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Solution Methods*Frame1*Table1*Frame6*Table6*CheckButton1(High Order Term Relaxation)" #f)(cx-gui-do cx-activate-item "Solution Methods*Frame1*Table1*Frame6*Table6*CheckButton1(High Order Term Relaxation)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox8*PushButton1(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*InfoSubMenu*Size")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList2(Flow)\" '( 1))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList2(Flow)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)\" '( 1))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList4(Turbulent Dissipation Rate)\" '( 1))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList4(Turbulent Dissipation Rate)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
solution1 = system3.GetContainer(ComponentName="Solution")
MonitorChart1 = solution1.CreateMonitorChart(
    defaultlogbasey="LogBaseCommon",
    Name="",
    ChartType="Residual")
solution2 = system2.GetContainer(ComponentName="Solution")
MonitorChart2 = solution2.CreateMonitorChart(
    defaultlogbasey="LogBaseCommon",
    Name="",
    ChartType="Residual")
solution3 = system1.GetContainer(ComponentName="Solution")
MonitorChart3 = solution3.CreateMonitorChart(
    defaultlogbasey="LogBaseCommon",
    Name="",
    ChartType="Residual")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
solution1.Edit()
setup2 = system3.GetContainer(ComponentName="Setup")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*zoom")')
setup2.SendCommand(Command="""(cx-use-window-id 1)(cx-set-camera '(0.0153742 0.477563 8.89875) '(0.0153742 0.477563 0) '(-2.97376e-010 1 0) 3.5595 3.5595 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.485321 0.089819 1.56013) '(0.485321 0.089819 0) '(-1.30385e-008 1 -3.72529e-009) 0.624051 0.624051 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.84802 -0.00384885 0.492015) '(0.84802 -0.00384885 0) '(-3.11993e-008 1 -3.72529e-009) 0.196806 0.196806 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.975986 -0.000506662 0.125095) '(0.975986 -0.000506662 0) '(-3.10247e-008 1 -4.65661e-009) 0.0500379 0.0500379 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.997919 -0.0013532 0.0445275) '(0.997919 -0.0013532 0) '(-3.35858e-008 1 -5.12227e-009) 0.017811 0.017811 \"perspective\")
(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Calculation Activities\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))""")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"GraphicsArea*GraphicsView1*DropDownList1\" '( 0))(cx-gui-do cx-activate-item \"GraphicsArea*GraphicsView1*DropDownList1\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
solutionComponent1 = system1.GetComponent(Name="Solution")
solutionComponent1.Refresh()
solution3.Edit()
solutionComponent1.Refresh()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*zoom")')
setup1.SendCommand(Command="""(cx-use-window-id 1)(cx-set-camera '(0.383962 0.197282 10.1195) '(0.383962 0.197282 0) '(-1.77533e-008 1 0) 4.04782 4.04782 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.578895 -0.0109558 2.16629) '(0.578895 -0.0109558 0) '(-3.87226e-008 1 0) 0.866515 0.866515 \"perspective\")
(cx-use-window-id 1)(cx-use-window-id 1)(cx-set-camera '(0.301366 -0.080685 2.16629) '(0.301366 -0.080685 0) '(9.31323e-010 1 0) 0.866515 0.866515 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0269824 0.0146447 0.408717) '(0.0269824 0.0146447 0) '(3.81842e-008 1 0) 0.163487 0.163487 \"perspective\")
(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Solution Methods\"))""")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Solution Methods*Frame1*Table1*CheckButton5(Pseudo Transient)" #f)(cx-gui-do cx-activate-item "Solution Methods*Frame1*Table1*CheckButton5(Pseudo Transient)")')
setup1.SendCommand(Command="""(cx-use-window-id 1)(cx-set-camera '(0.0103758 -0.00103226 0.152002) '(0.0103758 -0.00103226 0) '(-2.87546e-008 1 0) 0.0608008 0.0608008 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.00166174 -0.000189252 0.0275755) '(0.00166174 -0.000189252 0) '(-1.60799e-008 1 -4.65661e-010) 0.0110302 0.0110302 \"perspective\")
(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))""")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Working*Cancel")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Monitors*Frame1*Table1*Frame1*List1(Residuals, Statistic and Force Monitors)\" '( 0))(cx-gui-do cx-activate-item \"Monitors*Frame1*Table1*Frame1*List1(Residuals, Statistic and Force Monitors)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Frame1*Table1*Frame2*Table2*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Residual Monitors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Run Calculation*Frame1*Table1*PushButton21(Calculate)\")(cx-gui-do cx-activate-item \"ToolBar*View Tools*graphicslayout\")(cx-gui-do cx-activate-item \"MenuBar*PopupMenuView*graphicsview3h\")(cx-gui-do cx-set-list-selections \"GraphicsArea*GraphicsView2*DropDownList1\" '( 0))(cx-gui-do cx-activate-item \"GraphicsArea*GraphicsView2*DropDownList1\")(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system4 = system1.Duplicate(RelativeTo=system1)
system4.DisplayText = "third try"
mesh4 = system4.GetContainer(ComponentName="Mesh")
mesh4.Edit()
mesh4.Exit()
meshComponent2 = system4.GetComponent(Name="Mesh")
meshComponent2.Update(AllDependencies=True)
setupComponent2 = system4.GetComponent(Name="Setup")
setupComponent2.Refresh()
setup3 = system4.GetContainer(ComponentName="Setup")
fluentLauncherSettings2 = setup3.GetFluentLauncherSettings()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
setup3.Edit()
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Materials*Frame1*Table1*Frame1*List1(Materials)\" '( 1))(cx-gui-do cx-activate-item \"Materials*Frame1*Table1*Frame1*List1(Materials)\")")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Materials*Frame1*Table1*ButtonBox2*PushButton1(Create/Edit)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Materials*Frame1*Table1*Frame1*List1(Materials)\" '( 1))(cx-gui-do cx-activate-item \"Materials*Frame1*Table1*Frame1*List1(Materials)\")")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Materials*Frame1*Table1*ButtonBox2*PushButton1(Create/Edit)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|surface_body (fluid)"))')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 0))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*ButtonBox1*PushButton1(Edit)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "fluid-2-1*PanelButtons*PushButton2(Cancel)")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 0))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*ButtonBox1*PushButton1(Edit)")')
setup3.SendCommand(Command="(cx-gui-do cx-set-position \"velocity-inlet-5-1\" '(x 453 y 283))(cx-gui-do cx-set-position \"velocity-inlet-5-1\" '(x 464 y 207))(cx-gui-do cx-set-position \"velocity-inlet-5-1\" '(x 675 y 161))(cx-gui-do cx-set-position \"velocity-inlet-5-1\" '(x 684 y 164))(cx-gui-do cx-set-position \"velocity-inlet-5-1\" '(x 689 y 169))(cx-gui-do cx-activate-item \"velocity-inlet-5-1*PanelButtons*PushButton2(Cancel)\")")
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 1))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*ButtonBox1*PushButton1(Edit)")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "pressure-outlet-6-1*PanelButtons*PushButton2(Cancel)")')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 3))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 3))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 4))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 0))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 3))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 2))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Values"))')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reference Values*DropDownList1(Compute from)\" '( 2))(cx-gui-do cx-activate-item \"Reference Values*DropDownList1(Compute from)\")")
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList2(Flow)\" '( 1))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList2(Flow)\")")
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList2(Flow)\" '( 0))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList2(Flow)\")")
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Initialization*Frame1*Table1*DropDownList1(Compute from)\" '( 2))(cx-gui-do cx-activate-item \"Solution Initialization*Frame1*Table1*DropDownList1(Compute from)\")")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox8*PushButton1(Initialize)")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)" 3000)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)")')
setup3.SendCommand(Command="(cx-gui-do cx-activate-item \"Run Calculation*Frame1*Table1*PushButton21(Calculate)\")(cx-gui-do cx-activate-item \"ToolBar*View Tools*graphicslayout\")(cx-gui-do cx-activate-item \"MenuBar*PopupMenuView*graphicsview3h\")(cx-gui-do cx-set-list-selections \"GraphicsArea*GraphicsView2*DropDownList1\" '( 0))(cx-gui-do cx-activate-item \"GraphicsArea*GraphicsView2*DropDownList1\")")
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))')
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList4(Turbulent Dissipation Rate)\" '( 1))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList4(Turbulent Dissipation Rate)\")")
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)\" '( 1))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList3(Turbulent Kinetic Energy)\")")
setup3.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList2(Flow)\" '( 1))(cx-gui-do cx-activate-item \"Solution Methods*Frame1*Table1*Frame3(Spatial Discretization)*Table3(Spatial Discretization)*DropDownList2(Flow)\")")
setup3.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Solution Methods*Frame1*Table1*CheckButton5(Pseudo Transient)" #f)(cx-gui-do cx-activate-item "Solution Methods*Frame1*Table1*CheckButton5(Pseudo Transient)")')
setup3.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
mesh4.Edit()
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
geometry2 = system4.GetContainer(ComponentName="Geometry")
geometry2.Edit()
geometry2.Exit()
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-activate-item "Working*Cancel")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*General Tools*write")')
Save(Overwrite=True)
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuWrite*Save Project")')
setup3.SendCommand(Command='(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup3.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
mesh4.Exit()
Save(Overwrite=True)
